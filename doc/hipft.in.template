&hipft_input_parameters
!
! ****** Resolution ********
! ****** These are autoset when reading in an initial_map_filename *****
! ****** They are currently only used for validation runs.
!
  res_nt = 0
  res_np = 0
!
! ****** Initial map ********
!
  initial_map_filename = ''
!
! ****** Output options           ********
! ****** Time cadence is in hours ********
!
  output_map_root_filename    = 'hipft_brmap'
  output_map_directory        = 'output_maps'
  output_flows_root_filename  = 'hipft_flow'
  output_flows_directory      = 'output_flows'
  output_map_idx_cadence      = 0
  output_map_time_cadence     = 0.0
  output_map_2d               = .true.
  output_flows                = .false.
  output_history_time_cadence = 0.0
  output_single_precision     = .true.
!
! ****** Number of realizations ********
!
  n_realizations = 1
!
! ****** Validation Mode ********
!
  validation_run = 0
!
! ****** Time ********
!
  time_start = 0.0
  time_end = 1.0
!
! ****** Timestep ********
!
  dt_max_increase_fac = 0.0
  dt_min              = 1.0e-15
  dt_max              = 1.0e200
!
! ****** General algorithm options.
!
  strang_splitting = .true.
!
! ****** Pole flux history calculation latitude limit (degrees).
!
  pole_flux_lat_limit = 30.0
!
!-----------------------------------------------------------------------
!
! ****** FLOWS ********
!
! ****** Activate the flow advance.
!
  advance_flow = .false.
!
! ****** Add a rigid rotation vp velocity (km/s) of omega*sin(theta).
!
  flow_vp_rigid_omega = 0.0
!
! ****** Add a rigid rotation velocity (km/s) of omega for a rigid
! ****** rotation through the poles.
!
  flow_rigid_omega = 0.0
!
! ****** Add a constant vt velocity (km/s).
!
  flow_vt_const = 0.0
!
! ****** Attenuate the veolcity based on the value of Br.
! ****** This causes flow to be updated each step.
! ****** The attenuate value is the saturation level in Gauss.
!
  flow_attenuate = .false.
  flow_attenuate_value = 500.0
  !flow_attenuate_values = <List of comma-seperated values equal to # of realizations>
!
! ****** Analytic differential roation and meridianal flow models.
! ****** For each, setting "1" sets the model/params used often in the AFT model.
!
  flow_dr_model = 0
  flow_mf_model = 0
!  
  flow_dr_coef_p0_value = 46.0_r_typ
  flow_dr_coef_p2_value = -262.0_r_typ
  flow_dr_coef_p4_value = -379.0_r_typ
  !flow_dr_coef_p0_values = <List of comma-seperated values equal to # of realizations>
  !flow_dr_coef_p2_values = <List of comma-seperated values equal to # of realizations>
  !flow_dr_coef_p4_values = <List of comma-seperated values equal to # of realizations>
!
  flow_mf_coef_p1_value = 22.0_r_typ
  flow_mf_coef_p3_value = 11.0_r_typ
  flow_mf_coef_p5_value = -28.0_r_typ
  !flow_mf_coef_p1_values = <List of comma-seperated values equal to # of realizations>
  !flow_mf_coef_p3_values = <List of comma-seperated values equal to # of realizations>
  !flow_mf_coef_p5_values = <List of comma-seperated values equal to # of realizations>
!
! ****** Time dependent flows from file (used for conflow).
!
  use_flow_from_files = .false.
  flow_list_filename = ' '
  flow_root_dir = '.'
!
! ****** Algorithm options.
!        Can set upwind to central differencing by setting UPWIND=0.
! ****** 1: Forward Euler + Upwind.
! ****** 2: RK3TVD/SSPRK(3,3) + Upwind.
! ****** 3: RK3TVD/SSPRK(3,3) + WENO3.
! ****** 4: SSPRK(4,3) + WENO3
!
  flow_num_method = 4
!
! ****** Upwind coefficient.
!
  upwind = 1.0
!
!-----------------------------------------------------------------------
!
! ****** DIFFUSION ********
!
  advance_diffusion = .false.
!
  diffusion_coef_constant = 0.0
  !diffusion_coef_constants = <List of comma-seperated values equal to # of realizations>
  diffusion_coef_filename = ' '
  diffusion_coef_grid = .false.
  diffusion_coef_factor = 7.43162901307967e-09 ! (km2/sec to Rs^2/hour)
!
! ****** Algorithm options.
!
! ****** Select diffusion algorithm.
! ******   1: Explicit Euler (1st-order)
! ******   2: Explicit RKL2 Super Time-stepping (2nd-order)
! ******   3: Explicit RKG2 Super Time-stepping (2nd-order)
!
  diffusion_num_method = 3
!
! ****** Set number of diffusion subcycles per flow step.
! ****** For diffusion-only runs with RK[G|L]2, robust to set to ~30(60).
! ****** For flow+diffusion runs, this usually can be ~1.
! ****** Set this to 0 to "auto" set the subcycles (experimental).
!
  diffusion_subcycles = 0
!
!-----------------------------------------------------------------------
!
! ****** DATA ASSIMILATION ********
!
  assimilate_data = .false.
  assimilate_data_map_list_filename = ' '
  assimilate_data_map_root_dir = '.'
!
! ****** Custom assimilation options.
!
  assimilate_data_custom_from_mu = .false.
  assimilate_data_lat_limit = 0.
  !assimilate_data_lat_limits = <List of comma-seperated values equal to # of realizations>
  assimilate_data_mu_power = 4.0
  !assimilate_data_mu_powers = <List of comma-seperated values equal to # of realizations>
  assimilate_data_mu_limit = 0.1
  !assimilate_data_mu_limits = <List of comma-seperated values equal to # of realizations>
!
! ****** Debugging verbose output flag ********
!
  verbose = .false.
/
!
! Describe the run here.
!